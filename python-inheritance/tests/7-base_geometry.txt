>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("age")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("hi", "hello")
Traceback (most recent call last):
TypeError: hi must be an integer

>>> bg.integer_validator("age", -2)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("beast", 0)
Traceback (most recent call last):
ValueError: beast must be greater than 0

>>> bg.integer_validator("age", 2)

>>> bg.integer_validator("length", (0, 1))
Traceback (most recent call last):
TypeError: length must be an integer

>>> bg.integer_validator("age", [0, 1])
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("distance", {0:1, 2:3})
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("name", {0, 3})
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("hi", {0:1, 2:3})
Traceback (most recent call last):
TypeError: hi must be an integer

>>> bg.integer_validator("name", None)
Traceback (most recent call last):
TypeError: name must be an integer